package main

//import "github.com/gin-gonic/gin"
import (
	"go-antd-admin/router"
	 db "go-antd-admin/database"
	 "go-antd-admin/models"
	"encoding/json"
	"os"
	"github.com/swaggo/gin-swagger" // gin-swagger middleware
	"github.com/swaggo/files" // swagger embed files
	_ "go-antd-admin/docs" // docs is generated by Swag CLI, you have to import it.
	//"github.com/gin-gonic/gin"
)

type configuration struct {
    Port string
	Mongo_url   string
	Redis_url	string
	Mysql_url	string
}
func LoadConf()(conf configuration ){
    // 打开文件
    file, _ := os.Open("conf.json")
    // 关闭文件
    defer file.Close()
    //NewDecoder创建一个从file读取并解码json对象的*Decoder，解码器有自己的缓冲，并可能超前读取部分json数据。
    decoder := json.NewDecoder(file)
    //Decode从输入流读取下一个json编码值并保存在v指向的值里
	decoder.Decode(&conf)
	return conf
}
// @title go-antd-admin API
// @version 1.0
// @description 有角色权限功能的管理后台
func main() {
	conf:=LoadConf()
	db.Config(conf.Mysql_url,conf.Redis_url)
	models.Config()
	defer db.Mysql.Close()
	//defer db.Redis.Close()
	//gin.SetMode(gin.ReleaseMode)
	 r := router.InitRouter()
	 r.GET("/docs/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
 	r.Run(conf.Port) 
}